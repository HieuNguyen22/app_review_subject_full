// <auto-generated />
using System;
using APIReviewSubject.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace APIReviewSubject.Migrations
{
    [DbContext(typeof(EntityContext))]
    [Migration("20220910041507_v3.1")]
    partial class v31
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.17");

            modelBuilder.Entity("APIReviewSubject.Models.Admin", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("created")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("password")
                        .HasColumnType("longtext");

                    b.Property<int>("status")
                        .HasColumnType("int");

                    b.Property<DateTime?>("updated")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("userName")
                        .HasColumnType("longtext");

                    b.HasKey("id");

                    b.ToTable("Admins");
                });

            modelBuilder.Entity("APIReviewSubject.Models.Comment", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("content")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("created")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("postId")
                        .HasColumnType("int");

                    b.Property<int>("status")
                        .HasColumnType("int");

                    b.Property<DateTime?>("updated")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("userId")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.ToTable("Comments");
                });

            modelBuilder.Entity("APIReviewSubject.Models.Faculty", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("created")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("name")
                        .HasColumnType("longtext");

                    b.Property<int>("status")
                        .HasColumnType("int");

                    b.Property<int>("universityId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("updated")
                        .HasColumnType("datetime(6)");

                    b.HasKey("id");

                    b.ToTable("Faculties");
                });

            modelBuilder.Entity("APIReviewSubject.Models.Like", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("created")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("postId")
                        .HasColumnType("int");

                    b.Property<int>("status")
                        .HasColumnType("int");

                    b.Property<DateTime?>("updated")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("userId")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.ToTable("Likes");
                });

            modelBuilder.Entity("APIReviewSubject.Models.Notification", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("commentId")
                        .HasColumnType("int");

                    b.Property<DateTime>("created")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("isReaded")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("postId")
                        .HasColumnType("int");

                    b.Property<int>("status")
                        .HasColumnType("int");

                    b.Property<int>("type")
                        .HasColumnType("int");

                    b.Property<DateTime?>("updated")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("userBId")
                        .HasColumnType("int");

                    b.Property<int>("userId")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.ToTable("Notifications");
                });

            modelBuilder.Entity("APIReviewSubject.Models.Post", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("commentCount")
                        .HasColumnType("int");

                    b.Property<DateTime>("created")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("document")
                        .HasColumnType("longtext");

                    b.Property<int>("facultyId")
                        .HasColumnType("int");

                    b.Property<int>("likeCount")
                        .HasColumnType("int");

                    b.Property<string>("major")
                        .HasColumnType("longtext");

                    b.Property<int>("point")
                        .HasColumnType("int");

                    b.Property<int>("rateExam")
                        .HasColumnType("int");

                    b.Property<int>("rateHard")
                        .HasColumnType("int");

                    b.Property<int>("rateLike")
                        .HasColumnType("int");

                    b.Property<string>("reviewExam")
                        .HasColumnType("longtext");

                    b.Property<string>("reviewHard")
                        .HasColumnType("longtext");

                    b.Property<string>("reviewLike")
                        .HasColumnType("longtext");

                    b.Property<int>("status")
                        .HasColumnType("int");

                    b.Property<string>("subject")
                        .HasColumnType("longtext");

                    b.Property<string>("teacher")
                        .HasColumnType("longtext");

                    b.Property<int>("universityId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("updated")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("userId")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.ToTable("Posts");
                });

            modelBuilder.Entity("APIReviewSubject.Models.University", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("address")
                        .HasColumnType("longtext");

                    b.Property<string>("avatar")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("created")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("name")
                        .HasColumnType("longtext");

                    b.Property<int>("status")
                        .HasColumnType("int");

                    b.Property<DateTime?>("updated")
                        .HasColumnType("datetime(6)");

                    b.HasKey("id");

                    b.ToTable("Universities");
                });

            modelBuilder.Entity("APIReviewSubject.Models.User", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("avatar")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("created")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("email")
                        .HasColumnType("longtext");

                    b.Property<int?>("facultyId")
                        .HasColumnType("int");

                    b.Property<string>("fullname")
                        .HasColumnType("longtext");

                    b.Property<string>("major")
                        .HasColumnType("longtext");

                    b.Property<string>("password")
                        .HasColumnType("longtext");

                    b.Property<int>("point")
                        .HasColumnType("int");

                    b.Property<int>("status")
                        .HasColumnType("int");

                    b.Property<int>("universityId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("updated")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("userName")
                        .HasColumnType("longtext");

                    b.HasKey("id");

                    b.ToTable("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
